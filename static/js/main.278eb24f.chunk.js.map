{"version":3,"sources":["components/Navigation.js","components/TableUsers.js","components/User.js","components/CreateUser.js","components/EditUser.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","to","href","TableUsers","class","scope","Object","keys","this","props","users","map","user","email","id","name","phone","username","onClick","deleteUser","type","Component","User","renderUser","Fragment","CreateUser","state","password","readData","e","setState","target","value","submitData","preventDefault","createUser","onSubmit","placeholder","onChange","required","EditUser","editUser","chargeForm","defaultValue","Routes","getAPI","axios","get","then","res","console","log","data","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","delete","results","filter","post","userID","assign","prevState","put","userEdit","findIndex","exact","path","render","location","pathname","replace","Number","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.278eb24f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst  Navigation = () =>{\r\n        return(\r\n            <div className=\"container d-flex justify-content-center\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light navbar-brand \">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <Link to ={'/'}>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href={'/'}>Inicio</a>\r\n                        </li>\r\n                        </Link>\r\n                        <Link to={'/create'}>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href={'/create'}>Create</a>\r\n                        </li>\r\n                        </Link>\r\n                    </ul>     \r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\nexport default Navigation;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nclass TableUsers extends Component{\r\n    render(){      \r\n        return(\r\n<div className=\"container mt-5\">\r\n    <table class=\"table table-hover\">\r\n    <thead>\r\n    <tr>\r\n      <th scope=\"col\">ID</th>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">User</th>\r\n      <th scope=\"col\">Email</th>\r\n      <th scope=\"col\">Phone</th>\r\n      <th scope=\"col\">Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {Object.keys(this.props.users).map(user=>{\r\n          const {email,id,name,phone,username}= this.props.users[user];\r\n       return(\r\n        <tr>\r\n        <th scope=\"row\">{id}</th>\r\n        <td>{name}</td>\r\n        <td>{username}</td>\r\n        <td>{email}</td>\r\n        <td>{phone}</td>\r\n        <td>\r\n            <Link to={`/user/${id}`}>\r\n            <button className=\"btn btn-success btn-sm\">View</button>\r\n            </Link>    \r\n            <Link to = {`/edit/${id}`}>\r\n            <button className=\"btn btn-info btn-sm\">Edit</button>\r\n            </Link>\r\n            <button className=\"btn btn-danger btn-sm\" onClick={()=>this.props.deleteUser(id)} type=\"button\">Delete</button>\r\n            </td>\r\n      </tr>\r\n      )\r\n      }\r\n      )}\r\n   </tbody>\r\n    </table>\r\n</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableUsers;","import React,{Component} from 'react';\r\nclass User extends Component{\r\n    \r\nrenderUser = (props) =>{\r\n    if(!props.user) return null;\r\n    const {name,username,email,phone} = this.props.user;\r\n    return(\r\n        <div className=\"container d-flex justify-content-center\">\r\n            <ul className=\"list-group col col-md-6 row mt-5\">\r\n            <li className=\"list-group-item d-flex\">\r\n            <h2>{name}</h2>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-action\">\r\n                    {username}\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-action\">\r\n                    {email}\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-action\">\r\n                    {phone}\r\n                </li>\r\n            </ul>    \r\n        </div>\r\n    )\r\n}\r\n    \r\n    render(){    \r\n        return(\r\n            <React.Fragment>\r\n                {this.renderUser(this.props)}\r\n            </React.Fragment>\r\n               \r\n          \r\n        )\r\n    }\r\n}\r\n\r\nexport default User;","import React,{Component} from 'react';\r\nclass CreateUser extends Component{\r\n   \r\n   state={\r\n       user:{\r\n            name:'',\r\n            username:'',\r\n            phone:'',\r\n            email:'',\r\n            password:'',\r\n       }\r\n   }\r\n\r\n   readData = (e) => {\r\n       this.setState({\r\n           user:{\r\n               ...this.state.user,\r\n              [e.target.name] : e.target.value,\r\n           }\r\n       })\r\n   }\r\n\r\n   submitData = (e) =>{\r\n       e.preventDefault();\r\nthis.props.createUser(this.state.user)\r\n       \r\n   }\r\n   \r\n   \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center mt-3\">Create a new user</h2>\r\n               <form className=\"col col-md-6 m-auto\" onSubmit={this.submitData}>\r\n                  <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" className=\"form-control border-info\" placeholder=\"enter name\" name=\"name\" onChange={this.readData} required/>\r\n                </div> \r\n                <div className=\"form-group\">\r\n                    <label>User</label>\r\n                    <input type=\"text\" className=\"form-control border-info\" placeholder=\"enter user\" name=\"username\" onChange={this.readData} required/>\r\n                </div> \r\n                <div className=\"form-group\">\r\n                    <label>Phone</label>\r\n                    <input type=\"text\" className=\"form-control border-info\" placeholder=\"enter phone\" name=\"phone\" onChange={this.readData} required/>\r\n                </div> \r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" className=\"form-control border-info\" placeholder=\"enter email\" name=\"email\" onChange={this.readData} required/>\r\n                </div> \r\n                <div className=\"form-group\">\r\n                    <label>password</label>\r\n                    <input type=\"password\" className=\"form-control border-info\" placeholder=\"enter password\" name=\"password\" onChange={this.readData} required/>\r\n                </div> \r\n                <button className=\"btn btn-outline-primary\" type=\"submit\">Create</button>\r\n               </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateUser;","import React,{Component} from 'react';\r\nclass EditUser extends Component{\r\n   \r\n   state={\r\n       user:{\r\n            name:'',\r\n            username:'',\r\n            phone:'',\r\n            email:'',\r\n            password:'',\r\n            id:''\r\n       }\r\n   }\r\n\r\n   readData = (e) => {\r\n       this.setState({\r\n           user:{\r\n               ...this.state.user,\r\n              [e.target.name] : e.target.value,\r\n              id:this.props.user.id\r\n           }\r\n       })\r\n   }\r\n\r\n   submitData = (e) =>{\r\n       e.preventDefault();\r\nthis.props.editUser(this.state.user)\r\n       \r\n   }\r\n   \r\n\r\n   chargeForm = () =>{\r\n       if(!this.props.user) return null;\r\n       const {name,username,phone,email,password} = this.props.user;\r\n       return(\r\n        <div className=\"container\">\r\n        <h2 className=\"text-center mt-3\">Edit a current user</h2>\r\n       <form className=\"col col-md-6 m-auto\" onSubmit={this.submitData}>\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input type=\"text\" className=\"form-control border-info\" defaultValue={name} name=\"name\" onChange={this.readData} required/>\r\n        </div> \r\n        <div className=\"form-group\">\r\n            <label>User</label>\r\n            <input type=\"text\" className=\"form-control border-info\" defaultValue={username} name=\"username\" onChange={this.readData} required/>\r\n        </div> \r\n        <div className=\"form-group\">\r\n            <label>Phone</label>\r\n            <input type=\"text\" className=\"form-control border-info\" defaultValue={phone} name=\"phone\" onChange={this.readData} required/>\r\n        </div> \r\n        <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"email\" className=\"form-control border-info\" defaultValue={email} name=\"email\" onChange={this.readData} required/>\r\n        </div> \r\n        <div className=\"form-group\">\r\n            <label>password</label>\r\n            <input type=\"password\" className=\"form-control border-info\" defaultValue={password} name=\"password\" onChange={this.readData} required/>\r\n        </div> \r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Edit</button>\r\n       </form>\r\n    </div>\r\n       )\r\n   }\r\n   \r\n    render(){\r\n\r\n        return(\r\n           <React.Fragment>\r\n               {this.chargeForm()}\r\n           </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUser;","import React,{Component} from 'react';\r\nimport Navigation from './Navigation';\r\nimport TableUsers from './TableUsers';\r\n\r\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport User from './User';\r\nimport CreateUser from './CreateUser';\r\nimport EditUser from './EditUser'; \r\nclass Routes extends Component{\r\n//QUERY API\r\n\r\nstate={\r\n    users:[]\r\n}\r\n\r\n    getAPI = () =>{\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(res=>{\r\n            console.log(res)\r\n          this.setState({\r\n              users:res.data\r\n          })\r\n        })\r\n    }\r\n\r\n    deleteUser = (id) =>{\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n          }).then((result) => {\r\n            if (result.value) {\r\n                axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n                .then(res=>{ \r\n                    console.log(res)\r\n                   const users = [...this.state.users];\r\n                   let results = users.filter(user=>user.id !== id);\r\n                    this.setState({\r\n                        users : results\r\n                    })\r\n                })\r\n              Swal.fire(\r\n                'Deleted!',\r\n                'Your file has been deleted.',\r\n                'success'\r\n              )\r\n            }\r\n          }) \r\n    }\r\n\r\n    createUser = (user) => {\r\n       axios.post(`https://jsonplaceholder.typicode.com/posts`, {user})\r\n       .then(res=>{\r\n        Swal.fire(\r\n            'Good job!',\r\n            'You user has created!',\r\n            'success'\r\n          )\r\n          let userID = {id: res.data.id};\r\n          const user = Object.assign({}, res.data.user, userID)\r\n            this.setState(prevState =>({\r\n                users:[...prevState.users, user]\r\n            }))\r\n\r\n       })\r\n    }\r\n       \r\n\r\n    editUser = (user) =>{\r\n        const {id} = user;\r\n        axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`,{user})\r\n        .then(res=>{\r\n            Swal.fire(\r\n                'Good job!',\r\n                'You user has edited!',\r\n                'success'\r\n              )\r\n            let userID = res.data.id;\r\n            const users = [...this.state.users];\r\n            const userEdit = users.findIndex(user => userID === user.id);\r\n            users[userEdit] = user;\r\n            this.setState({\r\n                users\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getAPI();\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n            <BrowserRouter>\r\n            <Navigation/>\r\n            <Switch>\r\n                <Route exact path='/' render={()=>{return(\r\n                    <TableUsers\r\n                        users={this.state.users}\r\n                        deleteUser = {this.deleteUser}\r\n                    />\r\n                )}}/>\r\n\r\n                <Route exact path='/user/:id' render={(props)=>{ \r\n                    let id = props.location.pathname.replace('/user/', '');\r\n                    const users = this.state.users;            \r\n                    let filter= users.filter(user =>(user.id === Number(id)));\r\n                    return(\r\n                        <User\r\n                            user={filter[0]}\r\n                        />\r\n                    )\r\n                }} \r\n                />\r\n\r\n                <Route exact path ='/create' render={()=>{\r\n                    return(\r\n                        <CreateUser\r\n                            createUser={this.createUser}\r\n                        />\r\n                    )\r\n                    } }\r\n                />\r\n\r\n                <Route exact path='/edit/:id' render={(props)=>{ \r\n                    let id = props.location.pathname.replace('/edit/', '');\r\n                    const users = this.state.users;            \r\n                    let filter= users.filter(user =>(user.id === Number(id)));\r\n                    return(\r\n                        <EditUser\r\n                            user={filter[0]}\r\n                            editUser = {this.editUser}\r\n                        />\r\n                    )\r\n                }} \r\n                />\r\n\r\n            </Switch>\r\n            </BrowserRouter>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport Routes from './components/Routes';\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}